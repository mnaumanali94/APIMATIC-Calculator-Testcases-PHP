<?php
/*
 * APIMATICCalculatorTestcasesLib
 *
 * This file was automatically generated by APIMATIC v2.0 on 09/29/2016
 */

use APIMATICCalculatorTestcasesLib\APIException;
use APIMATICCalculatorTestcasesLib\Exceptions;
use APIMATICCalculatorTestcasesLib\APIHelper; 
use APIMATICCalculatorTestcasesLib\Models;

class SimpleCalculatorControllerTest extends PHPUnit_Framework_TestCase {
    
    /**
     * @var \APIMATICCalculatorTestcasesLib\Controllers\SimpleCalculatorController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass()
    {
        $client = new APIMATICCalculatorTestcasesLib\APIMATICCalculatorTestcasesClient();
        self::$controller = $client->getSimpleCalculator();	
    }

    /**
     * Setup test
     */
    protected function setUp()
    {
        $this->httpResponse = new HttpCallBackCatcher();
    }

    /**
     * Simply add two number together
     */
    public function testCheckSum() {
        // Parameters for the API call
        $input = array();
        $input['operation'] = 'SUM';
        $input['x'] = 5;
        $input['y'] = 5;

        // Set callback and perform API call
        $result = null;
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
        	$result = self::$controller->getCalculate($input);
        } catch(APIException $e) {};

        // Test response code
        $this->assertEquals(200, $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200");

        // Test whether the captured response is as we expected
        $this->assertNotNull($result,
            "Result does not exist");

        $this->assertEquals('10.0', 
                $this->httpResponse->getResponse()->getRawBody(),
                "Response body does not match exactly");
    }

}
